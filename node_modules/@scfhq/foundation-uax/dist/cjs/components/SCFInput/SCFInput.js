"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const TextField_1 = __importDefault(require("@mui/material/TextField"));
const react_hook_form_1 = require("react-hook-form");
const SCFInput = ({ show = true, onChange = undefined, form = undefined, ...muiAndControllerProps }) => {
    const handleChange = (event) => {
        // Set react hook form only if form and name are defined
        if (form && muiAndControllerProps.name) {
            form.setValue(muiAndControllerProps.name, event.target.value, { shouldValidate: (form && form.formState && form.formState.isSubmitted) });
        }
        // Launch regular onChange event
        onChange ? onChange(event) : null;
    };
    return (react_1.default.createElement(react_1.default.Fragment, null, show && ((form && muiAndControllerProps.name) ? (react_1.default.createElement(react_hook_form_1.Controller, { name: muiAndControllerProps.name, control: form.control, rules: muiAndControllerProps.rules, render: () => (react_1.default.createElement(TextField_1.default, { ...muiAndControllerProps, onChange: handleChange, error: muiAndControllerProps.error })) }))
        : (react_1.default.createElement(TextField_1.default, { ...muiAndControllerProps, onChange: handleChange })))));
};
exports.default = SCFInput;
