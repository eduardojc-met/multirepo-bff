"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = __importDefault(require("react"));
const Dialog_1 = __importDefault(require("@mui/material/Dialog"));
const IconButton_1 = __importDefault(require("@mui/material/IconButton"));
const DialogTitle_1 = __importDefault(require("@mui/material/DialogTitle"));
const DialogContent_1 = __importDefault(require("@mui/material/DialogContent"));
const DialogActions_1 = __importDefault(require("@mui/material/DialogActions"));
const SCFButton_1 = __importDefault(require("../SCFButton/SCFButton"));
const Close_1 = __importDefault(require("@mui/icons-material/Close"));
const SCFDialog = ({ show = true, title = undefined, actionsClassName, content = undefined, actionButtons = undefined, buttons = undefined, onClose = undefined, ...muiprops }) => {
    /**
     * Esto es para darle soporte a la prop buttons, deprecada.
     * TODO: Adaptar cuando se quite la prop button.
     */
    const actions = actionButtons ? actionButtons : buttons;
    return (react_1.default.createElement(react_1.default.Fragment, null, show && (react_1.default.createElement(Dialog_1.default, { ...muiprops },
        react_1.default.createElement(DialogTitle_1.default, { sx: { p: 4 } },
            title,
            onClose && (react_1.default.createElement(IconButton_1.default, { "aria-label": "close", onClick: onClose, sx: {
                    position: 'absolute',
                    right: 16,
                    top: 12,
                } },
                react_1.default.createElement(Close_1.default, null)))),
        react_1.default.createElement(DialogContent_1.default, { sx: { px: 4, pb: actions ? 2 : 4 } }, content),
        actions && actions.length > 0 && (react_1.default.createElement(DialogActions_1.default, { sx: { px: 4, pb: 2 } }, actions.map((button, index) => {
            return (react_1.default.createElement(SCFButton_1.default, { key: index, variant: button.variant, onClick: button.onClick, color: "primary" }, button.title));
        })))))));
};
exports.default = SCFDialog;
