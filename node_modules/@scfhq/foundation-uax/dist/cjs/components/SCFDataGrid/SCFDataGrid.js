"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const x_data_grid_1 = require("@mui/x-data-grid");
const Button_1 = __importDefault(require("@mui/material/Button"));
const FileDownloadOutlined_1 = __importDefault(require("@mui/icons-material/FileDownloadOutlined"));
const SCFGridToolbarExport_1 = __importDefault(require("./SCFGridToolbarExport"));
const SCFDataGrid = ({ show = true, customExportAction = undefined, customToolbar = undefined, lang = 'en', locale = x_data_grid_1.enUS, ...muiprops }) => {
    const dictionary = {
        es: x_data_grid_1.esES.components.MuiDataGrid.defaultProps.localeText,
        en: x_data_grid_1.enUS.components.MuiDataGrid.defaultProps.localeText
    };
    // Merged custom translations with mui default ones
    const localTranslation = {
        ...dictionary[lang],
        ...locale
    };
    function SCFGRidToolbar() {
        return (React.createElement(x_data_grid_1.GridToolbarContainer, null,
            React.createElement(x_data_grid_1.GridToolbarColumnsButton, null),
            React.createElement(x_data_grid_1.GridToolbarFilterButton, null),
            React.createElement(x_data_grid_1.GridToolbarDensitySelector, null),
            customExportAction ?
                React.createElement(Button_1.default, { startIcon: React.createElement(FileDownloadOutlined_1.default, null), onClick: customExportAction }, localTranslation.toolbarExport)
                :
                    React.createElement(SCFGridToolbarExport_1.default, null)));
    }
    return show === true ? React.createElement(x_data_grid_1.DataGrid, { ...muiprops, localeText: localTranslation, components: { Toolbar: customToolbar ? customToolbar : SCFGRidToolbar } }) : React.createElement(React.Fragment, null);
};
exports.default = SCFDataGrid;
