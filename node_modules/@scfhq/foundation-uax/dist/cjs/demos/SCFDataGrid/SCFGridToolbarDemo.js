"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    var desc = Object.getOwnPropertyDescriptor(m, k);
    if (!desc || ("get" in desc ? !m.__esModule : desc.writable || desc.configurable)) {
      desc = { enumerable: true, get: function() { return m[k]; } };
    }
    Object.defineProperty(o, k2, desc);
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.SCFGridToolbarDemo = void 0;
const React = __importStar(require("react"));
const x_data_grid_1 = require("@mui/x-data-grid");
const components_1 = require("../../components");
const SCFGridToolbarDemo = () => {
    const columns = [
        { field: "id", headerName: "ID", width: 90 },
        {
            field: "firstName",
            headerName: "First name",
            width: 150,
            editable: true,
        },
        {
            field: "lastName",
            headerName: "Last name",
            width: 150,
            editable: true,
        },
        {
            field: "age",
            headerName: "Age",
            type: "number",
            width: 110,
            editable: true,
        },
        {
            field: "fullName",
            headerName: "Full name",
            description: "This column has a value getter and is not sortable.",
            sortable: false,
            width: 160,
            valueGetter: (params) => `${params.row.firstName || ""} ${params.row.lastName || ""} ${params.row.age || ""} `,
        },
    ];
    const rows = [
        { id: 1, lastName: "Snow", firstName: "Jon", age: 35 },
        { id: 2, lastName: "Lannister", firstName: "Cersei", age: 42 },
        { id: 3, lastName: "Lannister", firstName: "Jaime", age: 45 },
        { id: 4, lastName: "Stark", firstName: "Arya", age: 16 },
        { id: 5, lastName: "Targaryen", firstName: "Daenerys", age: null },
        { id: 6, lastName: "Melisandre", firstName: null, age: 150 },
        { id: 7, lastName: "Clifford", firstName: "Ferrara", age: 44 },
        { id: 8, lastName: "Frances", firstName: "Rossini", age: 36 },
        { id: 9, lastName: "Roxie", firstName: "Harvey", age: 65 },
    ];
    return (React.createElement("div", { style: { height: 400, width: '100%' } },
        React.createElement(components_1.SCFDataGrid, { rows: rows, columns: columns, pageSize: 5, rowsPerPageOptions: [5], checkboxSelection: true, disableSelectionOnClick: true, customExportAction: () => alert("Custon download action demo"), components: {
                Toolbar: x_data_grid_1.GridToolbar,
            } })));
};
exports.SCFGridToolbarDemo = SCFGridToolbarDemo;
exports.default = exports.SCFGridToolbarDemo;
