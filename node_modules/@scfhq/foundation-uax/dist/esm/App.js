import "./demo-app.scss";
import React from "react";
import Container from "@mui/material/Container";
import Typography from "@mui/material/Typography";
import Box from "@mui/material/Box";
import Link from "@mui/material/Link";
import Divider from "@mui/material/Divider";
import Grid from "@mui/material/Grid";
import List from "@mui/material/List";
import Toolbar from "@mui/material/Toolbar";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";
import ListItemText from "@mui/material/ListItemText";
import SCFDivider from "./components/SCFDivider/SCFDivider";
import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";
import ArrowRightIcon from "@mui/icons-material/ArrowRight";
import { styled } from "@mui/material/styles";
import MuiDrawer from "@mui/material/Drawer";
import MuiAppBar from "@mui/material/AppBar";
import Paper from "@mui/material/Paper";
import ChevronLeftIcon from "@mui/icons-material/ChevronLeft";
import { SCFAccordionDemo, SCFAlertDemo, SCFAppBarDemo, SCFAvatarDemo, SCFBadgeDemo, SCFBasicMenuDemo, SCFBasicPaginationDemo, SCFBasicTableDemo, SCFBottomNavigationDemo, SCFBreadcrumbsDemo, SCFButtonDemo, SCFChangePasswordFormDemo, SCFCheckboxDemo, SCFChipDemo, SCFClickAwayListenerDemo, SCFCustomMiniDrawerDemo, SCFDataGridDemo, SCFDatePickerDemo, SCFDialogDemo, SCFDividerDemo, SCFDoubleStepLoginDemo, SCFGridToolbarDemo, SCFHorizontalStepperDemo, SCFIconButtonDemo, SCFIconDemo, SCFInputDemo, SCFLinksDemo, SCFListDemo, SCFLoginDemo, SCFMiniDrawerDemo, SCFModalDemo, SCFNoSsrDemo, SCFPaperDemo, SCFPasswordDemo, SCFPopoverDemo, SCFPortalDemo, SCFRadioDemo, SCFRadioGroupDemo, SCFSelectDemo, SCFSidebarDemo, SCFSkeletonDemo, SCFSliderDemo, SCFSnackbarDemo, SCFSpinnerDemo, SCFSwitchDemo, SCFTabDemo, SCFTextareaAutosizeDemo, SCFToggleButtonDemo, SCFTooltipDemo, SCFTreeViewDemo, } from "./demos";
function Copyright(props) {
    return (React.createElement(Typography, { variant: "body2", color: "text.secondary", align: "center", ...props },
        "Copyright Â© ",
        React.createElement(Link, { color: "inherit", href: "https://www.santanderconsumer.es/" }, "Santander Consumer Finance HQ"),
        " ",
        new Date().getFullYear(),
        "."));
}
function App() {
    return (React.createElement(Container, { maxWidth: "lg" },
        React.createElement(Typography, { variant: "h1", gutterBottom: true, fontWeight: "bold", sx: { mt: 8 } }, "Login"),
        React.createElement(SCFDivider, { sx: { mb: 4 } }),
        React.createElement(Box, { sx: { px: 2, py: 8, mb: 2 } },
            React.createElement(Grid, { container: true, spacing: 2 },
                React.createElement(Grid, { item: true, md: 6, sx: { display: "flex", justifyContent: "center" } },
                    React.createElement(SCFLoginDemo, null)),
                React.createElement(Grid, { item: true, md: 6, p: 2, sx: { display: "flex", justifyContent: "center" } },
                    React.createElement(SCFDoubleStepLoginDemo, null)))),
        React.createElement("div", { id: "sCFButtonDemo" },
            React.createElement(SCFButtonDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFBadgeDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFAccordionDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFAppBarDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFAvatarDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFBasicPaginationDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFAlertDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSliderDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSnackbarDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSpinnerDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSwitchDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFTextareaAutosizeDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSkeletonDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFRadioDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFRadioGroupDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSelectDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFTreeViewDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFPortalDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFPopoverDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFPaperDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFNoSsrDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFPasswordDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFChangePasswordFormDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFBottomNavigationDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFCheckboxDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFChipDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFClickAwayListenerDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFDialogDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFModalDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFDividerDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFLinksDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFListDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFDataGridDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFBasicMenuDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFHorizontalStepperDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFInputDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFBreadcrumbsDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFMiniDrawerDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFBasicTableDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFDatePickerDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFIconButtonDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFTabDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFGridToolbarDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFTooltipDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFToggleButtonDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFIconDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFCustomMiniDrawerDemo, null)),
        React.createElement("div", null,
            React.createElement(SCFSidebarDemo, null)),
        React.createElement("div", { id: "sCFInputDemo" },
            React.createElement(SCFInputDemo, null))));
}
const drawerWidth = 240;
const AppBar = styled(MuiAppBar, {
    shouldForwardProp: (prop) => prop !== "open",
})(({ theme, open }) => ({
    zIndex: theme.zIndex.drawer + 1,
    transition: theme.transitions.create(["width", "margin"], {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen,
    }),
    ...(open && {
        marginLeft: drawerWidth,
        width: `calc(100% - ${drawerWidth}px)`,
        transition: theme.transitions.create(["width", "margin"], {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.enteringScreen,
        }),
    }),
}));
const Drawer = styled(MuiDrawer, {
    shouldForwardProp: (prop) => prop !== "open",
})(({ theme, open }) => ({
    "& .MuiDrawer-paper": {
        position: "relative",
        whiteSpace: "nowrap",
        width: drawerWidth,
        transition: theme.transitions.create("width", {
            easing: theme.transitions.easing.sharp,
            duration: theme.transitions.duration.enteringScreen,
        }),
        boxSizing: "border-box",
        ...(!open && {
            overflowX: "hidden",
            transition: theme.transitions.create("width", {
                easing: theme.transitions.easing.sharp,
                duration: theme.transitions.duration.leavingScreen,
            }),
            width: theme.spacing(7),
            [theme.breakpoints.up("sm")]: {
                width: theme.spacing(9),
            },
        }),
    },
}));
function DashboardContent() {
    const [open, setOpen] = React.useState(true);
    const toggleDrawer = () => {
        setOpen(!open);
    };
    return (React.createElement(Box, { sx: { display: "flex" } },
        React.createElement(AppBar, { position: "absolute", open: open },
            React.createElement(Toolbar, { sx: {
                    pr: "24px", // keep right padding when drawer closed
                } },
                React.createElement(IconButton, { edge: "start", color: "inherit", "aria-label": "open drawer", onClick: toggleDrawer, sx: {
                        marginRight: "36px",
                        ...(open && { display: "none" }),
                    } },
                    React.createElement(MenuIcon, null)),
                React.createElement(Typography, { component: "h1", variant: "h6", color: "inherit", noWrap: true, sx: { flexGrow: 1 } }, "Santander Consumer Finance HQ - Foundation UAX Demo"))),
        React.createElement(Drawer, { variant: "permanent", open: open },
            React.createElement(Toolbar, { sx: {
                    display: "flex",
                    alignItems: "center",
                    justifyContent: "flex-end",
                    px: [1],
                } },
                React.createElement(IconButton, { onClick: toggleDrawer },
                    React.createElement(ChevronLeftIcon, null))),
            React.createElement(Divider, null),
            React.createElement("a", { href: "#sCFButtonDemo" }, "test"),
            React.createElement(List, { component: "nav" },
                React.createElement(ListItemButton, { component: Link, href: "#sCFButtonDemo" },
                    React.createElement(ListItemIcon, null,
                        React.createElement(ArrowRightIcon, null)),
                    React.createElement(ListItemText, { primary: "SCFButton" })),
                React.createElement(ListItemButton, { href: "#sCFInputDemo" },
                    React.createElement(ListItemIcon, null,
                        React.createElement(ArrowRightIcon, null)),
                    React.createElement(ListItemText, { primary: "SCFInput" })))),
        React.createElement(Box, { component: "main", sx: {
                backgroundColor: (theme) => theme.palette.mode === "light"
                    ? theme.palette.grey[100]
                    : theme.palette.grey[900],
                flexGrow: 1,
                height: "100vh",
                overflow: "auto",
            } },
            React.createElement(Toolbar, null),
            React.createElement(Container, { maxWidth: "lg", sx: { mt: 4, mb: 4 } },
                React.createElement(Grid, { container: true, spacing: 0 },
                    React.createElement(Grid, { item: true, xs: 12 },
                        React.createElement(Paper, { sx: { p: 2, display: "flex", flexDirection: "column" } },
                            React.createElement(App, null)))),
                React.createElement(Copyright, { sx: { pt: 4 } })))));
}
export default function Dashboard() {
    return React.createElement(DashboardContent, null);
}
