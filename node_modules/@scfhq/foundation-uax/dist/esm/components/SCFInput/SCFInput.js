import React from "react";
import TextField from "@mui/material/TextField";
import { Controller } from "react-hook-form";
const SCFInput = ({ show = true, onChange = undefined, form = undefined, ...muiAndControllerProps }) => {
    const handleChange = (event) => {
        // Set react hook form only if form and name are defined
        if (form && muiAndControllerProps.name) {
            form.setValue(muiAndControllerProps.name, event.target.value, { shouldValidate: (form && form.formState && form.formState.isSubmitted) });
        }
        // Launch regular onChange event
        onChange ? onChange(event) : null;
    };
    return (React.createElement(React.Fragment, null, show && ((form && muiAndControllerProps.name) ? (React.createElement(Controller, { name: muiAndControllerProps.name, control: form.control, rules: muiAndControllerProps.rules, render: () => (React.createElement(TextField, { ...muiAndControllerProps, onChange: handleChange, error: muiAndControllerProps.error })) }))
        : (React.createElement(TextField, { ...muiAndControllerProps, onChange: handleChange })))));
};
export default SCFInput;
