import React, { useEffect, useState } from "react";
import Select from "@mui/material/Select";
import { FormControl, InputLabel, MenuItem } from "@mui/material";
const SCFSelect = ({ show = true, options = [], required = false, label = "Choose an option", inputLabel = false, sx = [], onChange, ...muiprops }) => {
    const [value, setValue] = useState("");
    const handleChange = (event) => {
        setValue(event.target.value);
        onChange ? onChange(event) : null;
    };
    /**
     * Set initial value. Takes care about value type and only accepts strings.
     */
    useEffect(() => {
        setValue(typeof muiprops.value === "string" ? muiprops.value : "");
    });
    return (React.createElement(React.Fragment, null, show && (React.createElement(FormControl, { required: required, 
        // You cannot spread `sx` directly because `SxProps` (typeof sx) can be an array.
        sx: [...(Array.isArray(sx) ? sx : [sx])] },
        label && React.createElement(InputLabel, { id: `${muiprops.id}-label` },
            " ",
            label,
            " "),
        React.createElement(Select, { labelId: `${muiprops.id}-label`, label: label, ...muiprops, onChange: handleChange, value: value, name: muiprops.name }, options.map((option, index) => {
            return (React.createElement(MenuItem, { key: index, value: option.value }, option.name));
        }))))));
};
export default SCFSelect;
