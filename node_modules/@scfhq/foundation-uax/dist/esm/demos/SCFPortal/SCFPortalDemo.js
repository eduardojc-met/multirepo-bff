import React, { useState } from "react";
import Grid from "@mui/material/Grid";
import Typography from "@mui/material/Typography";
import Box from "@mui/material/Box";
import { SCFPortal, SCFDivider } from "../../components";
const SCFPortalDemo = () => {
    const [showPortal, setShowPortal] = useState(false);
    const container = React.useRef(null);
    const handleClickPortal = () => {
        setShowPortal(!showPortal);
    };
    return (React.createElement(React.Fragment, null,
        React.createElement(Typography, { variant: "h1", gutterBottom: true, fontWeight: "bold", sx: { mt: 8 } }, "Portal"),
        React.createElement(SCFDivider, null),
        React.createElement(Grid, { item: true },
            React.createElement("button", { type: "button", onClick: handleClickPortal }, showPortal ? "Unmount children" : "Mount children"),
            React.createElement(Box, { sx: { p: 1, my: 1, border: "1px solid" } },
                "It looks like I will render here.",
                showPortal ? (React.createElement(SCFPortal, { container: container.current },
                    React.createElement("span", null, "But I actually render here!"))) : null),
            React.createElement(Box, { sx: { p: 1, my: 1, border: "1px solid" }, ref: container }))));
};
export default SCFPortalDemo;
