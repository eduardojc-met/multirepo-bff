import * as React from 'react';
import FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';
import FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';
import FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';
import FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';
import Box from '@mui/material/Box';
import SCFToggleButton from '@mui/material/ToggleButton';
import ToggleButtonGroup from '@mui/material/ToggleButtonGroup';
const SCFToggleButtonDemo = () => {
    const [alignment, setAlignment] = React.useState('left');
    const handleChange = (event, newAlignment) => {
        /**
         * TODO MEJORAR
         */
        console.warn(event);
        setAlignment(newAlignment);
    };
    const children = [
        React.createElement(SCFToggleButton, { value: "left", key: "left" },
            React.createElement(FormatAlignLeftIcon, null)),
        React.createElement(SCFToggleButton, { value: "center", key: "center" },
            React.createElement(FormatAlignCenterIcon, null)),
        React.createElement(SCFToggleButton, { value: "right", key: "right" },
            React.createElement(FormatAlignRightIcon, null)),
        React.createElement(SCFToggleButton, { value: "justify", key: "justify" },
            React.createElement(FormatAlignJustifyIcon, null)),
    ];
    const control = {
        value: alignment,
        onChange: handleChange,
        exclusive: true,
    };
    return (React.createElement(Box, { sx: {
            display: 'flex',
            flexDirection: 'column',
            alignItems: 'center',
            // TODO Replace with Stack
            '& > :not(style) + :not(style)': { mt: 2 },
        } },
        React.createElement(ToggleButtonGroup, { size: "small", ...control }, children)));
};
export default SCFToggleButtonDemo;
