import React from 'react';
import { ComponentMeta } from '@storybook/react';
declare const _default: ComponentMeta<({ show, ...muiprops }: {
    children?: React.ReactNode;
    classes?: Partial<import("@mui/material").ButtonClasses> | undefined;
    color?: "error" | "inherit" | "success" | "primary" | "secondary" | "info" | "warning" | undefined;
    disabled?: boolean | undefined;
    disableElevation?: boolean | undefined;
    disableFocusRipple?: boolean | undefined;
    endIcon?: React.ReactNode;
    fullWidth?: boolean | undefined;
    href?: string | undefined;
    size?: "small" | "medium" | "large" | undefined;
    startIcon?: React.ReactNode;
    sx?: import("@mui/system").SxProps<import("@mui/material").Theme> | undefined;
    variant?: "text" | "outlined" | "contained" | undefined;
} & Omit<{
    action?: React.Ref<import("@mui/material").ButtonBaseActions> | undefined;
    centerRipple?: boolean | undefined;
    children?: React.ReactNode;
    classes?: Partial<import("@mui/material").ButtonBaseClasses> | undefined;
    disabled?: boolean | undefined;
    disableRipple?: boolean | undefined;
    disableTouchRipple?: boolean | undefined;
    focusRipple?: boolean | undefined;
    focusVisibleClassName?: string | undefined;
    LinkComponent?: React.ElementType<any> | undefined;
    onFocusVisible?: React.FocusEventHandler<any> | undefined;
    sx?: import("@mui/system").SxProps<import("@mui/material").Theme> | undefined;
    tabIndex?: number | undefined;
    TouchRippleProps?: Partial<import("@mui/material/ButtonBase/TouchRipple").TouchRippleProps> | undefined;
    touchRippleRef?: React.Ref<import("@mui/material/ButtonBase/TouchRipple").TouchRippleActions> | undefined;
}, "classes"> & import("@mui/material/OverridableComponent").CommonProps & Omit<Pick<React.DetailedHTMLProps<React.ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof React.ButtonHTMLAttributes<HTMLButtonElement>> & {
    ref?: ((instance: HTMLButtonElement | null) => void) | React.RefObject<HTMLButtonElement> | null | undefined;
}, "color" | "action" | "children" | "tabIndex" | "disabled" | "size" | "href" | "sx" | keyof import("@mui/material/OverridableComponent").CommonProps | "variant" | "centerRipple" | "disableRipple" | "disableTouchRipple" | "focusRipple" | "focusVisibleClassName" | "LinkComponent" | "onFocusVisible" | "TouchRippleProps" | "touchRippleRef" | "disableFocusRipple" | "disableElevation" | "endIcon" | "fullWidth" | "startIcon"> & {
    show?: boolean | undefined;
}) => JSX.Element>;
export default _default;
export declare const Button: any;
