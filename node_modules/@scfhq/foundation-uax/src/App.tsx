import "./demo-app.scss";
import React from "react";
import Container from "@mui/material/Container";
import Typography from "@mui/material/Typography";
import Box from "@mui/material/Box";
import Link from "@mui/material/Link";
import Divider from "@mui/material/Divider";
import Grid from "@mui/material/Grid";

import List from "@mui/material/List";
import Toolbar from "@mui/material/Toolbar";
import IconButton from "@mui/material/IconButton";
import MenuIcon from "@mui/icons-material/Menu";

import ListItemText from "@mui/material/ListItemText";
import SCFDivider from "./components/SCFDivider/SCFDivider";

import ListItemButton from "@mui/material/ListItemButton";
import ListItemIcon from "@mui/material/ListItemIcon";

import ArrowRightIcon from "@mui/icons-material/ArrowRight";
import { styled } from "@mui/material/styles";
import MuiDrawer from "@mui/material/Drawer";
import MuiAppBar, { AppBarProps as MuiAppBarProps } from "@mui/material/AppBar";
import Paper from "@mui/material/Paper";
import ChevronLeftIcon from "@mui/icons-material/ChevronLeft";

import {
  SCFAccordionDemo,
  SCFAlertDemo,
  SCFAppBarDemo,
  SCFAvatarDemo,
  SCFBadgeDemo,
  SCFBasicMenuDemo,
  SCFBasicPaginationDemo,
  SCFBasicTableDemo,
  SCFBottomNavigationDemo,
  SCFBreadcrumbsDemo,
  SCFButtonDemo,
  SCFChangePasswordFormDemo,
  SCFCheckboxDemo,
  SCFChipDemo,
  SCFClickAwayListenerDemo,
  SCFCustomMiniDrawerDemo,
  SCFDataGridDemo,
  SCFDatePickerDemo,
  SCFDialogDemo,
  SCFDividerDemo,
  SCFDoubleStepLoginDemo,
  SCFGridToolbarDemo,
  SCFHorizontalStepperDemo,
  SCFIconButtonDemo,
  SCFIconDemo,
  SCFInputDemo,
  SCFLinksDemo,
  SCFListDemo,
  SCFLoginDemo,
  SCFMiniDrawerDemo,
  SCFModalDemo,
  SCFNoSsrDemo,
  SCFPaperDemo,
  SCFPasswordDemo,
  SCFPopoverDemo,
  SCFPortalDemo,
  SCFRadioDemo,
  SCFRadioGroupDemo,
  SCFSelectDemo,
  SCFSidebarDemo,
  SCFSkeletonDemo,
  SCFSliderDemo,
  SCFSnackbarDemo,
  SCFSpinnerDemo,
  SCFSwitchDemo,
  SCFTabDemo,
  SCFTextareaAutosizeDemo,
  SCFToggleButtonDemo,
  SCFTooltipDemo,
  SCFTreeViewDemo,
} from "./demos";


function Copyright(props: any) {
  return (
    <Typography
      variant="body2"
      color="text.secondary"
      align="center"
      {...props}
    >
      {"Copyright Â© "}
      <Link color="inherit" href="https://www.santanderconsumer.es/">
        Santander Consumer Finance HQ
      </Link>{" "}
      {new Date().getFullYear()}
      {"."}
    </Typography>
  );
}

function App() {
  return (
    <Container maxWidth="lg">
      <Typography variant="h1" gutterBottom fontWeight={"bold"} sx={{ mt: 8 }}>
        Login
      </Typography>
      <SCFDivider sx={{ mb: 4 }} />
      <Box sx={{ px: 2, py: 8, mb: 2 }}>
        <Grid container spacing={2}>
          <Grid item md={6} sx={{ display: "flex", justifyContent: "center" }}>
            <SCFLoginDemo />
            {/**Esta es la key de centen, se puede utilizar para pruebas,
             *const siteKey= '6LcJsB8eAAAAAEHl8gmAG6RYRqwSM-kaWYzxUb0r';
             */}
          </Grid>
          <Grid
            item
            md={6}
            p={2}
            sx={{ display: "flex", justifyContent: "center" }}
          >
            <SCFDoubleStepLoginDemo />
          </Grid>
        </Grid>
      </Box>
      <div id="sCFButtonDemo">
        <SCFButtonDemo />
      </div>
      <div>
        <SCFBadgeDemo />
      </div>
      <div>
        <SCFAccordionDemo />
      </div>
      <div>
        <SCFAppBarDemo />
      </div>
      <div>
        <SCFAvatarDemo />
      </div>
      <div>
        <SCFBasicPaginationDemo />
      </div>
      <div>
        <SCFAlertDemo />
      </div>
      <div>
        <SCFSliderDemo />
      </div>
      <div>
        <SCFSnackbarDemo />
      </div>
      <div>
        <SCFSpinnerDemo />
      </div>
      <div>
        <SCFSwitchDemo />
      </div>
      <div>
        <SCFTextareaAutosizeDemo />
      </div>
      <div>
        <SCFSkeletonDemo />
      </div>
      <div>
        <SCFRadioDemo />
      </div>
      <div>
        <SCFRadioGroupDemo />
      </div>
      <div>
        <SCFSelectDemo />
      </div>
      <div>
        <SCFTreeViewDemo />
      </div>
      <div>
        <SCFPortalDemo />
      </div>
      <div>
        <SCFPopoverDemo />
      </div>
      <div>
        <SCFPaperDemo />
      </div>
      <div>
        <SCFNoSsrDemo />
      </div>
      <div>
        <SCFPasswordDemo />
      </div>
      <div>
        <SCFChangePasswordFormDemo />
      </div>
      <div>
        <SCFBottomNavigationDemo />
      </div>
      <div>
        <SCFCheckboxDemo />
      </div>
      <div>
        <SCFChipDemo />
      </div>
      <div>
        <SCFClickAwayListenerDemo />
      </div>
      <div>
        <SCFDialogDemo />
      </div>
      <div>
        <SCFModalDemo />
      </div>
      <div>
        <SCFDividerDemo />
      </div>
      <div>
        <SCFLinksDemo />
      </div>
      <div>
        <SCFListDemo />
      </div>
      <div>
        <SCFDataGridDemo />
      </div>
      <div>
        <SCFBasicMenuDemo />
      </div>
      <div>
        <SCFHorizontalStepperDemo />
      </div>
      <div>
        <SCFInputDemo />
      </div>
      <div>
        <SCFBreadcrumbsDemo />
      </div>
      <div>
        <SCFMiniDrawerDemo />
      </div>
      <div>
        <SCFBasicTableDemo />
      </div>
      <div>
        <SCFDatePickerDemo />
      </div>
      <div>
        <SCFIconButtonDemo />
      </div>
      <div>
        <SCFTabDemo />
      </div>
      <div>
        <SCFGridToolbarDemo />
      </div>
      <div>
        <SCFTooltipDemo />
      </div>
      <div>
        <SCFToggleButtonDemo />
      </div>
      <div>
        <SCFIconDemo />
      </div>
      <div>
        <SCFCustomMiniDrawerDemo />
      </div>
      <div>
        <SCFSidebarDemo/>
      </div>
      <div id="sCFInputDemo">
        <SCFInputDemo/>
      </div>
    </Container>
  );
}

const drawerWidth: number = 240;

interface AppBarProps extends MuiAppBarProps {
  open?: boolean;
}

const AppBar = styled(MuiAppBar, {
  shouldForwardProp: (prop) => prop !== "open",
})<AppBarProps>(({ theme, open }) => ({
  zIndex: theme.zIndex.drawer + 1,
  transition: theme.transitions.create(["width", "margin"], {
    easing: theme.transitions.easing.sharp,
    duration: theme.transitions.duration.leavingScreen,
  }),
  ...(open && {
    marginLeft: drawerWidth,
    width: `calc(100% - ${drawerWidth}px)`,
    transition: theme.transitions.create(["width", "margin"], {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
  }),
}));

const Drawer = styled(MuiDrawer, {
  shouldForwardProp: (prop) => prop !== "open",
})(({ theme, open }) => ({
  "& .MuiDrawer-paper": {
    position: "relative",
    whiteSpace: "nowrap",
    width: drawerWidth,
    transition: theme.transitions.create("width", {
      easing: theme.transitions.easing.sharp,
      duration: theme.transitions.duration.enteringScreen,
    }),
    boxSizing: "border-box",
    ...(!open && {
      overflowX: "hidden",
      transition: theme.transitions.create("width", {
        easing: theme.transitions.easing.sharp,
        duration: theme.transitions.duration.leavingScreen,
      }),
      width: theme.spacing(7),
      [theme.breakpoints.up("sm")]: {
        width: theme.spacing(9),
      },
    }),
  },
}));

function DashboardContent() {
  const [open, setOpen] = React.useState(true);
  const toggleDrawer = () => {
    setOpen(!open);
  };

  return (
    <Box sx={{ display: "flex" }}>
      <AppBar position="absolute" open={open}>
        <Toolbar
          sx={{
            pr: "24px", // keep right padding when drawer closed
          }}
        >
          <IconButton
            edge="start"
            color="inherit"
            aria-label="open drawer"
            onClick={toggleDrawer}
            sx={{
              marginRight: "36px",
              ...(open && { display: "none" }),
            }}
          >
            <MenuIcon />
          </IconButton>
          <Typography
            component="h1"
            variant="h6"
            color="inherit"
            noWrap
            sx={{ flexGrow: 1 }}
          >
            Santander Consumer Finance HQ - Foundation UAX Demo
          </Typography>
        </Toolbar>
      </AppBar>
      <Drawer variant="permanent" open={open}>
        <Toolbar
          sx={{
            display: "flex",
            alignItems: "center",
            justifyContent: "flex-end",
            px: [1],
          }}
        >
          <IconButton onClick={toggleDrawer}>
            <ChevronLeftIcon />
          </IconButton>
        </Toolbar>
        <Divider />
        <a href="#sCFButtonDemo">test</a>
        <List component="nav">
          <ListItemButton component={Link} href="#sCFButtonDemo">
            <ListItemIcon>
              <ArrowRightIcon />
            </ListItemIcon>
            <ListItemText primary="SCFButton" />
          </ListItemButton>
          <ListItemButton href="#sCFInputDemo">
            <ListItemIcon>
              <ArrowRightIcon />
            </ListItemIcon>
            <ListItemText primary="SCFInput" />
          </ListItemButton>
        </List>
      </Drawer>
      <Box
        component="main"
        sx={{
          backgroundColor: (theme) =>
            theme.palette.mode === "light"
              ? theme.palette.grey[100]
              : theme.palette.grey[900],
          flexGrow: 1,
          height: "100vh",
          overflow: "auto",
        }}
      >
        <Toolbar />
        <Container maxWidth="lg" sx={{ mt: 4, mb: 4 }}>
          <Grid container spacing={0}>
            <Grid item xs={12}>
              <Paper sx={{ p: 2, display: "flex", flexDirection: "column" }}>
                <App />
              </Paper>
            </Grid>
          </Grid>
          <Copyright sx={{ pt: 4 }} />
        </Container>
      </Box>
    </Box>
  );
}

export default function Dashboard() {
  return <DashboardContent />;
}
