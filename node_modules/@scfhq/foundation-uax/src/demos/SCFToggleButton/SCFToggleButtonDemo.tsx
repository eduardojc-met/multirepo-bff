import * as React from 'react';
import FormatAlignLeftIcon from '@mui/icons-material/FormatAlignLeft';
import FormatAlignCenterIcon from '@mui/icons-material/FormatAlignCenter';
import FormatAlignRightIcon from '@mui/icons-material/FormatAlignRight';
import FormatAlignJustifyIcon from '@mui/icons-material/FormatAlignJustify';
import Box from '@mui/material/Box';
import SCFToggleButton from '@mui/material/ToggleButton';
import ToggleButtonGroup from '@mui/material/ToggleButtonGroup';

const SCFToggleButtonDemo = () => {
  const [alignment, setAlignment] = React.useState('left');

  const handleChange = (
    event: React.MouseEvent<HTMLElement>,
    newAlignment: string,
  ) => {
    /**
     * TODO MEJORAR
     */
    console.warn(event);
    setAlignment(newAlignment);
  };

  const children = [
    <SCFToggleButton value="left" key="left">
      <FormatAlignLeftIcon />
    </SCFToggleButton>,
    <SCFToggleButton value="center" key="center">
      <FormatAlignCenterIcon />
    </SCFToggleButton>,
    <SCFToggleButton value="right" key="right">
      <FormatAlignRightIcon />
    </SCFToggleButton>,
    <SCFToggleButton value="justify" key="justify">
      <FormatAlignJustifyIcon />
    </SCFToggleButton>,
  ];

  const control = {
    value: alignment,
    onChange: handleChange,
    exclusive: true,
  };

  return (
    <Box
      sx={{
        display: 'flex',
        flexDirection: 'column',
        alignItems: 'center',
        // TODO Replace with Stack
        '& > :not(style) + :not(style)': { mt: 2 },
      }}
    >
      <ToggleButtonGroup size="small" {...control}>
        {children}
      </ToggleButtonGroup>
    </Box>
  );
}
export default SCFToggleButtonDemo;