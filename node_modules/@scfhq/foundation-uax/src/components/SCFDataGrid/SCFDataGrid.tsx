import * as React from 'react';
import { DataGrid, DataGridProps, GridToolbarColumnsButton, GridToolbarContainer, GridToolbarDensitySelector, GridToolbarFilterButton, esES, enUS } from "@mui/x-data-grid";
import Button from "@mui/material/Button";
import FileDownloadOutlinedIcon from '@mui/icons-material/FileDownloadOutlined';
import SCFGridToolbarExport from "./SCFGridToolbarExport";
type SCFDataGridProps = DataGridProps & {
  /**
   * Controls if the component must be rendered
   */
  show?: boolean;
  /**
   * If defined, a "Download XLS" button will be displayed instead of 
   */
  customExportAction?: () => void;
  /**
   * If defined, a customToolbar will be rendered instead of the default SCFGridToolbar
   * Example: customToolbar={GridToolbar}
   */
  customToolbar?: React.JSXElementConstructor<any> | null;
  // default:english
  lang?: string;
  locale?: any;
};


const SCFDataGrid = ({ show = true, customExportAction = undefined, customToolbar = undefined, lang = 'en', locale = enUS,  ...muiprops }: SCFDataGridProps) => {

  const dictionary = {
    es: esES.components.MuiDataGrid.defaultProps.localeText,
    en: enUS.components.MuiDataGrid.defaultProps.localeText
  };

  // Merged custom translations with mui default ones
  const localTranslation = {
    ...dictionary[lang],
    ...locale
  };

  function SCFGRidToolbar() {
    return (
      <GridToolbarContainer>
        <GridToolbarColumnsButton />
        <GridToolbarFilterButton />
        <GridToolbarDensitySelector />
        {customExportAction ?  
          <Button startIcon={<FileDownloadOutlinedIcon />} onClick={customExportAction}>{localTranslation.toolbarExport}</Button>
        :
          <SCFGridToolbarExport />
        }
      </GridToolbarContainer>
    );
  }

  return show === true ? <DataGrid {...muiprops} localeText={localTranslation} components={{ Toolbar: customToolbar? customToolbar : SCFGRidToolbar }} /> : <></>;
};

export default SCFDataGrid;
